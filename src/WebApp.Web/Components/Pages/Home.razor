
@page "/"

<PageTitle>AI Chat</PageTitle>

<div class="ai-chat-container">
	<h2>AI 이미지 & 텍스트 생성</h2>
	<div class="prompt-section">
		<input type="text" class="prompt-input" @bind="userPrompt" placeholder="프롬프트를 입력하세요..." />
		<button class="send-btn" @onclick="SendPrompt">전송</button>
	</div>
	<div class="suggestion-section">
		<span>추천 프롬프트:</span>
	<button class="suggestion-btn" @onclick='() => SetPrompt("who am I")'>who am I</button>
	<button class="suggestion-btn" @onclick='() => SetPrompt("create a pixelated image of a beaver")'>create a pixelated image of a beaver</button>
	</div>
</div>


@code {
	private string userPrompt = string.Empty;

	// 메시지 데이터 구조
	public class AiMessage
	{
	public string? Role { get; set; } // "user" or "ai"
		public string? Text { get; set; }
		public string? ImageUrl { get; set; }
	}

	private List<AiMessage> messages = new();

	private void SetPrompt(string prompt)
	{
		userPrompt = prompt;
	}

	private void SendPrompt()
	{
		if (!string.IsNullOrWhiteSpace(userPrompt))
		{
			// 사용자 메시지 추가
			messages.Add(new AiMessage { Role = "user", Text = userPrompt });
			// TODO: AI 서비스 호출 후 응답 메시지 추가
			// 예시: AI가 텍스트와 이미지를 반환한다고 가정
			messages.Add(new AiMessage { Role = "ai", Text = "AI 응답 예시입니다.", ImageUrl = "https://placekitten.com/320/200" });
			userPrompt = string.Empty;
		}
	}
}

<div class="chat-history">
	@foreach (var msg in messages)
	{
		<div class="chat-message @(msg.Role)">
			@if (msg.Role == "user")
			{
				<div class="user-label">나</div>
			}
			else
			{
				<div class="ai-label">AI</div>
			}
			@if (!string.IsNullOrEmpty(msg.Text))
			{
				<div class="chat-text">@msg.Text</div>
			}
			@if (!string.IsNullOrEmpty(msg.ImageUrl))
			{
				<img class="chat-image" src="@msg.ImageUrl" alt="AI 이미지" />
			}
		</div>
	}
</div>

<style>
.ai-chat-container {
	max-width: 600px;
	margin: 40px auto;
	padding: 32px;
	background: #fff;
	border-radius: 16px;
	box-shadow: 0 2px 12px rgba(0,0,0,0.08);
}
.prompt-section {
	display: flex;
	gap: 8px;
	margin-bottom: 16px;
}
.prompt-input {
	flex: 1;
	padding: 8px 12px;
	font-size: 1rem;
	border-radius: 8px;
	border: 1px solid #ccc;
}
.send-btn {
	padding: 8px 16px;
	border-radius: 8px;
	background: #0078d4;
	color: #fff;
	border: none;
	font-weight: bold;
	cursor: pointer;
}
.suggestion-section {
	margin-bottom: 8px;
}
.suggestion-btn {
	margin: 0 4px;
	padding: 6px 12px;
	border-radius: 8px;
	background: #e5e5e5;
	border: none;
	cursor: pointer;
	font-size: 0.95rem;
}
.suggestion-btn:hover {
	background: #d0e6ff;
}
.chat-history {
	margin-top: 24px;
}
.chat-message {
	display: flex;
	align-items: flex-start;
	gap: 12px;
	margin-bottom: 18px;
	padding: 12px 0;
	border-bottom: 1px solid #f0f0f0;
}
.chat-message.user {
	flex-direction: row-reverse;
}
.user-label {
	font-weight: bold;
	color: #0078d4;
	min-width: 32px;
}
.ai-label {
	font-weight: bold;
	color: #444;
	min-width: 32px;
}
.chat-text {
	background: #f5f5f5;
	padding: 8px 12px;
	border-radius: 8px;
	max-width: 340px;
	word-break: break-word;
}
.chat-image {
	max-width: 180px;
	border-radius: 8px;
	box-shadow: 0 1px 6px rgba(0,0,0,0.08);
}
</style>
